//
//  Contact.swift
//  PeerPocket
//
//  Created by 11927 on 14/3/2025.
//

import Foundation
import FirebaseFirestore

class Contact {
    var id : String!
    var firstname : String
    var lastname : String
    var email : String
    var phone : String
    var photo : String
    var note : String
    var favourite : Bool
    var registered : Timestamp
    
    //default initializer wnenever we want to create a contact, therefore id would be autogenerated by firestore
    init(firstname: String, lastname: String, email: String, phone: String, photo: String, note: String, favourite: Bool, registered: Timestamp) {
        
        self.firstname = firstname
        self.lastname = lastname
        self.email = email
        self.phone = phone
        self.photo = photo
        self.note = note
        self.favourite = favourite
        self.registered = registered
    }
    
    convenience init(id: String, firstname: String, lastname: String, email: String, phone: String, photo: String, note: String, favourite: Bool, registered: Timestamp
    ){
        self.init(
           firstname: firstname,
           lastname: lastname,
           email: email,
           phone: phone,
           photo: photo,
           note: note,
           favourite: favourite,
           registered: registered
        )
        self.id = id
    }
    convenience init(id: String){
        self.init(firstname: "", lastname: "", email: "", phone: "", photo: "", note: "", favourite: false, registered: Timestamp(date: Date()))
        self.id = id
    }
    //this initializer will be used whenever we wantto fetch a contact by id
    
    //firebase returns dictionaries
    
    convenience init(id: String, dictionary : [String: Any]) {
        self.init(id: id,
                  firstname: dictionary["firstname"] as? String ?? "",
                  lastname: dictionary["lastname"] as? String ?? "",
                  email: dictionary["email"] as? String ?? "",
                  phone: dictionary["phone"] as? String ?? "",
                  photo: dictionary["photo"] as? String ?? "",
                  note: dictionary["note"] as? String ?? "",
                  favourite: dictionary["favourite"] as? Bool ?? false,
                  registered: dictionary ["registered"] as? Timestamp ?? Timestamp(date: Date())
                  
        )
    }
    func toString() -> String {
            return "id: \(id ?? "NO AUTOID"), firstname: \(firstname), lastname: \(lastname), email: \(email), phone: \(phone), photo: \(photo)"
        
//        , favourite: \(favourite), note: \(note), registered: \(registered)"
        }
}

 

